cmake_minimum_required(VERSION 3.10)

project(tinyfiledialogs)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

add_library(tinyfiledialogs.hdll filedialog.cpp libs/tinyfiledialogs/tinyfiledialogs.c)
target_include_directories(tinyfiledialogs.hdll PUBLIC libs/tinyfiledialogs)
set_target_properties(tinyfiledialogs.hdll PROPERTIES PREFIX "" OUTPUT_NAME tinyfiledialogs SUFFIX .hdll)

if (WIN32)
    if (BUILD_HASHLINK)
		if (NOT TARGET libhl)
			add_subdirectory(${HL_LIBS_DIR}/hashlink hashlink)
			set_property(TARGET libhl PROPERTY POSITION_INDEPENDENT_CODE ON)
		endif()
		target_link_libraries(tinyfiledialogs.hdll libhl)
	else()
		target_include_directories(tinyfiledialogs.hdll PUBLIC $ENV{HASHLINKPATH}/include)
		target_link_libraries(tinyfiledialogs.hdll $ENV{HASHLINKPATH}/libhl.lib)
	endif()
elseif (APPLE)
    if (BUILD_HASHLINK)
		if (NOT TARGET libhl)
            add_subdirectory(${HL_LIBS_DIR}/hashlink hashlink)
            set_property(TARGET libhl PROPERTY POSITION_INDEPENDENT_CODE ON)
		endif()
		target_link_libraries(tinyfiledialogs.hdll libhl)
	else()
        target_include_directories(tinyfiledialogs.hdll PUBLIC ${HLPATH}/include)
        target_link_libraries(tinyfiledialogs.hdll ${HLPATH}/lib/libhl.dylib)
    endif()

    if (NOT IOS)
        find_library(APPLICATION_SERVICES_FRAMEWORK ApplicationServices REQUIRED)
        target_link_libraries(tinyfiledialogs.hdll ${APPLICATION_SERVICES_FRAMEWORK})
    endif()
else()
    if (BUILD_HASHLINK)
        if (NOT TARGET libhl)
            add_subdirectory(${HL_LIBS_DIR}/hashlink hashlink)
            set_property(TARGET libhl PROPERTY POSITION_INDEPENDENT_CODE ON)
        endif()
        target_link_libraries(tinyfiledialogs.hdll libhl)
    else()
        target_include_directories(tinyfiledialogs.hdll PUBLIC $ENV{HASHLINKPATH}/src)
        target_link_libraries(tinyfiledialogs.hdll $ENV{HASHLINKPATH}/libhl.so)
    endif()
endif()

install(TARGETS tinyfiledialogs.hdll DESTINATION lib)